import { createClientFromRequest } from 'npm:@base44/sdk@0.7.1';
import Stripe from 'npm:stripe@^14';

const stripe = new Stripe(Deno.env.get("STRIPE_API_KEY"));

Deno.serve(async (req) => {
    try {
        const base44 = createClientFromRequest(req);
        const user = await base44.auth.me();

        if (!user) {
            return new Response(JSON.stringify({ error: 'Unauthorized' }), { status: 401, headers: { 'Content-Type': 'application/json' } });
        }

        const { return_url } = await req.json();

        const customerId = user.stripe_customer_id;

        if (!customerId) {
            return new Response(JSON.stringify({ error: "L'utente non ha un account di pagamento." }), { status: 400, headers: { 'Content-Type': 'application/json' } });
        }

        const portalSession = await stripe.billingPortal.sessions.create({
            customer: customerId,
            return_url: return_url,
        });

        return new Response(JSON.stringify({ url: portalSession.url }), {
            status: 200,
            headers: { 'Content-Type': 'application/json' },
        });

    } catch (error) {
        console.error('Error creating customer portal session:', error.message);
        return new Response(JSON.stringify({ error: error.message }), { status: 500, headers: { 'Content-Type': 'application/json' } });
    }
});
